{"version":3,"sources":["components/header/Menu.js","components/mainPage/WatchList.js","components/mainPage/SearchStock.js","components/infoPage/StockDetails.js","components/infoPage/StockChart.js","components/App.js","components/header/User.js","components/loginPage/Login.js","components/signupPage/signup.js","Routes.js","serviceWorker.js","index.js","components/home.svg","components/header/stocklogo.svg","components/header/grav.png","components/mainPage/info.svg","components/mainPage/del.svg","components/mainPage/search.svg"],"names":["MenuDropdown","props","_useState","useState","_useState2","Object","slicedToArray","menuVisible","setMenuVisible","react_default","a","createElement","className","href","src","logo","alt","user","Fragment","gravexample","id","type","for","onClick","name","onLogout","onLogin","WatchList","stocks","map","stock","index","key","symbol","del","delStock","concat","react_tradingview_widget_default","theme","Themes","LIGHT","locale","style","interval","hide_legend","hide_top_toolbar","width","height","price","changePercent","toFixed","selectStock","info","SearchStock","_ref","getValueFromInput","addStockToList","onSubmit","onChange","placeholder","autoFocus","value","svgSprite","StockDetails","companyName","week52low","week52high","suffixNum","Math","floor","length","shortValue","parseFloat","pow","toPrecision","intToString","marketcap","revenue","revenuePerShare","ebitda","profitMargin","returnOnEquity","ttmEPS","dividendYield","BarChart","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","stock_period_url","period","setPeriod","asyncToGenerator","regenerator_default","mark","_callee","e","wrap","_context","prev","next","preventDefault","setState","target","console","log","state","buttonColor","textColor","getChartData","stop","_x","apply","arguments","chartData","_this2","axios","get","then","results","data","samples","high","dates","date","minutes","minute","labels","datasets","label","backgroundColor","_this3","color","border","es","Component","serverQuoteUrl","stockSymbol","serverStatsUrl","StockDetailsPage","selectedStock","backToList","homeButton","components_infoPage_StockDetails","infoPage_StockChart","App","deleteStock","assign","splice","page","currentUser","menu_icon","gravata","email","newloading","logout","bind","assertThisInitialized","login","gettingUserInfo","gettingStockList","addingStockList","deleteStockList","noLoginList","initialstocks","setTimeout","previousList","forEach","el","push","_ref2","indexOf","fetchStockDetailsFromAPI","sent","toConsumableArray","withCredentials","result","companylist","nostocklist","split","newlist","listcontents","post","listname","stocksymbol","_this4","history","quote","stats","EBITDA","header_Menu","mainPage_SearchStock","components_mainPage_WatchList","App_StockDetailsPage","React","User","Login","password","getEmail","getPassword","routeChange","event","userId","aa","Signup","getName","signup","Routes","react_router_dom","react_router","exact","path","component","Menu","StockChart","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e613b084.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport logo from \"./stocklogo.svg\";\nimport gravexample from \"./grav.png\";\nimport \"./Menu.scss\";\n\nconst MenuDropdown = props => {\n  const [menuVisible, setMenuVisible] = useState(false);\n  return (\n    <div className=\"menu\">\n      <header>\n        <div className=\"second-box\" />\n        <a href=\"http://localhost:3000/#/\">\n          <img className=\"logo\" src={logo} alt=\" \" />\n        </a>\n\n        <p className=\"signed-in-user-gravatar\"> </p>\n        {props.user ? (\n          <>\n            <img className=\"gravatar\" src={gravexample} alt=\" \" />\n            <input id=\"burger\" type=\"checkbox\" />\n            <label\n              id=\"label-menu\"\n              for=\"burger\"\n              onClick={() => setMenuVisible(!menuVisible)}\n            >\n              <span className=\"nav-line\" />\n              <span className=\"nav-line\" />\n              <span className=\"nav-line\" />\n            </label>\n\n            {menuVisible ? (\n              <>\n                <nav className=\"drop-down\">\n                  {/* <div className=\"nav-item\">Account</div> */}\n                  <div className=\"nav-item\">{props.user.name}</div>\n                  <button\n                    className=\"nav-item nav-button\"\n                    onClick={props.onLogout}\n                  >\n                    Logout\n                  </button>\n                </nav>\n              </>\n            ) : null}\n          </>\n        ) : (\n          <button className=\"login-button\" onClick={props.onLogin}>\n            Login\n          </button> // once the user goes to log in, there it can go to signup\n        )}\n      </header>\n    </div>\n  );\n};\n\nexport default MenuDropdown;\n\n// <p className=\"user-gravatar\">{props.user.gravata}</p>\n","import React from \"react\";\nimport \"./WatchList.scss\";\nimport info from \"./info.svg\";\nimport del from \"./del.svg\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nconst WatchList = props => (\n  <div>\n    {props.stocks.map((stock, index) => {\n      return (\n        <div key={stock.symbol} className=\"item\">\n          <img className=\"del-icon\" src={del} alt=\"\" onClick={() => props.delStock(index)} />\n\n          <div className=\"stock-logo\">\n            <img className=\"stock-logo\" alt=\"\" src={stock.symbol === 'GOOGL' ? `http://logo.clearbit.com/googl.com` : `https://storage.googleapis.com/iex/api/logos/${stock.symbol}.png`} />\n          </div>\n\n          <div className=\"symbol_name\">\n            <div className=\"symbol\">{stock.symbol}</div>\n          </div>\n          <div className=\"wiget\">\n            <TradingViewWidget\n              symbol={`NASDAQ:${stock.symbol}`}\n              theme={Themes.LIGHT}\n              locale=\"en\"\n              style=\"3\"\n              interval=\"D\"\n              hide_legend={true}\n              hide_top_toolbar={true}\n              width=\"130%\"\n              height=\"155\"\n            />\n          </div>\n\n          <div className=\"price_percent\">\n            <div className=\"price\">$ {stock.price}</div>\n            <div className=\"percent\">{(stock.changePercent.toFixed(2))}</div>\n          </div>\n          <img\n            className=\"info-icon\"\n            onClick={() => props.selectStock(stock.symbol)}\n            src={info}\n            alt=\"\"\n          />\n        </div>\n      );\n    })}\n  </div>\n);\n\nexport default WatchList;\n","import React from \"react\";\nimport \"./SearchStocks.scss\";\nimport svgSprite from \"./search.svg\";\n\nconst SearchStock = ({ getValueFromInput, addStockToList }) => {\n  return (\n    <div>\n      <form className=\"search-stock\" onSubmit={addStockToList}>\n        <div className=\"search-input\">\n          <div className=\"cursor\">\n            <input\n              className=\"input_field\"\n              type=\"search\"\n              onChange={getValueFromInput}\n              placeholder=\"symbol\"\n              autoFocus\n            />\n            <i />\n          </div>\n        </div>\n        <div>\n          <button className=\"submit_input\" type=\"submit\" value=\"\">\n            <img className=\"search-button\" src={svgSprite} alt=\" \" />\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchStock;\n","import React from \"react\";\nimport \"./StockDetails.scss\";\n\nfunction intToString(value) {\n  var suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n  var suffixNum = Math.floor((\"\" + value).length / 3);\n  var shortValue = parseFloat(\n    (suffixNum != 0 ? value / Math.pow(1000, suffixNum) : value).toPrecision(2)\n  );\n  if (shortValue % 1 != 0) {\n    // var shortNum = shortValue.toFixed(1);\n  }\n  return shortValue + suffixes[suffixNum];\n}\n\nconst StockDetails = ({ stock }) => {\n  return (\n    <>\n      <div className=\"stock-details-container item\">\n        <div className=\"symbol-name\">\n          <div className=\"company-symbol\"> {stock.symbol}</div>\n          <div className=\"company-name\">{stock.companyName}</div>\n        </div>\n        <div className=\"price-osc\">\n          <div className=\"price-list\">$ {stock.price.toFixed(2)}</div>\n          <div>{stock.changePercent.toFixed(2)}</div>\n        </div>\n      </div>\n\n      <div className=\"stock-details\">\n        <p>week52Low:($) {stock.week52low.toFixed(2)}</p>\n        <p>week52High:($) {stock.week52high.toFixed(2)}</p>\n        <p>Market cap:($) {intToString(stock.marketcap)}</p>\n        <p>Revenue:($) {stock.revenue.toFixed(2)}</p>\n        <p>Revenue per share:($) {stock.revenuePerShare.toFixed(2)}</p>\n        <p>EBITDA: {stock.ebitda.toFixed(2)}</p>\n        <p>Profit Margin: $ {stock.profitMargin.toFixed(2)}</p>\n        <p>ROE: {stock.returnOnEquity.toFixed(2)}</p>\n        <p>EPS: {stock.ttmEPS.toFixed(2)}</p>\n        <p>Div.Yield: {stock.dividendYield.toFixed(2)}</p>\n      </div>\n    </>\n  );\n};\nexport default StockDetails;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport \"./StockChart.scss\";\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      period: \"1y\",\n      chartData: {},\n      buttonColor: \"#45a29e\",\n      textColor: \"#1f2833\"\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  stock_period_url = (symbol, period) => {\n    return `https://api.iextrading.com/1.0/stock/${symbol}/chart/${period}`;\n  };\n\n  setPeriod = async e => {\n    e.preventDefault();\n    await this.setState({\n      period: e.target.value\n    });\n    console.log(this.state.period);\n    this.setState({ buttonColor: \"#66fcf1\" });\n    this.setState({ textColor: \"#1f2833\" });\n    this.getChartData();\n  };\n\n  getChartData() {\n    axios\n      .get(this.stock_period_url(this.props.symbol, this.state.period))\n      .then(results => {\n        const { data } = results;\n        const samples = data.map(value => value.high);\n        const dates = data.map(value => value.date);\n        const minutes = data.map(value => value.minute);\n        this.setState({\n          chartData: {\n            labels: this.state.period === \"1d\" ? minutes: dates,\n            datasets: [\n              {\n                label: \"Price\",\n                data: samples,\n                backgroundColor: [\"rgba(75, 192, 192, 0.6)\"]\n              }\n            ]\n          }\n        });\n        // console.log({ results });\n      });\n  }\n\n  render() {\n    const periods = [\"1d\", \"1m\", \"3m\", \"6m\", \"1y\", \"2y\", \"5y\"];\n  \n      return (\n        <>\n          <div className=\"chart-container\">\n            <div className=\"current-period\" />\n            {periods.map(period => (\n              <button\n                className=\"period-buttons\"\n                onClick={this.setPeriod}\n                style={\n                  period === this.state.period\n                    ? {\n                        color: \"#1f2833\",\n                        backgroundColor: \"#66fcf1\",\n                        border: \"2px solid #1f2833\"\n                      }\n                    : { color: \"#66fcf1\", backgroundColor: \"#1f2833\" }\n                }\n                value={period}\n              >\n                {period}\n              </button>\n            ))}\n\n            <Line data={this.state.chartData} />\n          </div>\n        </>\n      );\n  }\n}\n\nexport default BarChart;\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"../App.scss\";\nimport homeButton from \"./home.svg\";\n\nimport MenuDropdown from \"./header/Menu\";\nimport WatchList from \"./mainPage/WatchList\";\nimport SearchStock from \"./mainPage/SearchStock\";\nimport StockDetails from \"./infoPage/StockDetails\";\nimport StockChart from \"./infoPage/StockChart\";\n\n\n// const serverTop10Companies = companies =>\n//   `https://api.iextrading.com/1.0/tops/last?symbols=${companies}`;\n\nconst serverPriceUrl = stockSymbol =>\n  `https://api.iextrading.com/1.0/stock/${stockSymbol}/price`;\nconst serverQuoteUrl = stockSymbol =>\n  `https://api.iextrading.com/1.0/stock/${stockSymbol}/quote?displayPercent=true`;\nconst serverStatsUrl = stockSymbol =>\n  `https://api.iextrading.com/1.0/stock/${stockSymbol}/stats`;\n\nconst StockDetailsPage = ({ selectedStock, backToList, symbol }) => (\n  <>\n    <div>\n      <button className=\"mobile-button\" onClick={backToList}>\n        <img className=\"mobile-button-icon\" src={homeButton} alt=\" \" />\n      </button>\n      <button className=\"back-to-list\" onClick={backToList}>\n        Back to list\n      </button>\n    </div>\n    <StockDetails stock={selectedStock} />\n    <StockChart symbol={symbol} />\n  </>\n);\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    const currentUser = {\n      menu_icon: \"menu_icon\",\n      gravata: \"gravata\",\n      name: \"\",\n      email: \"luke@email.com\"\n    };\n\n    this.state = {\n      selectedStock: {\n        changePercent: 0\n      },\n      stocks: [],\n      page: \"LIST\", // LIST || DETAILS\n\n      symbol: \"\",\n      results: [],\n\n      menuVisible: false,\n      currentUser: currentUser,\n\n      newloading: []\n    };\n\n    this.logout = this.logout.bind(this);\n    this.login = this.login.bind(this);\n\n    this.selectStock = this.selectStock.bind(this);\n    this.backToList = this.backToList.bind(this);\n\n    this.getValueFromInput = this.getValueFromInput.bind(this);\n    this.addStockToList = this.addStockToList.bind(this);\n\n    ///////////////////////////REST api for reading////////////////////////\n    this.gettingUserInfo = this.gettingUserInfo.bind(this); // getting user information from data base\n    this.gettingUserInfo()\n\n    // this.gettingUserStock = this.gettingUserStock.bind(this);\n    // this.gettingUserStock() //test completed\n\n    this.gettingStockList = this.gettingStockList.bind(this)\n    // this.gettingStockList() //test completed\n\n\n    //////////////REST API for writing. Please change the paramaters before apply\n    // this.addingStocktoUser = this.addingStocktoUser.bind(this) //test completed\n    // this.addingStocktoUser()// test completed\n\n    this.addingStockList = this.addingStockList.bind(this)\n    // // this.addingStockList() //test completed\n\n\n    this.deleteStockList =this.deleteStockList.bind(this)\n    // this.deleteStockList() test copleted\n    // this.deleteStockList()\n    this.noLoginList= this.noLoginList.bind(this)\n    this.noLoginList() //To be replaced\n\n    // this.initialStockLoading = this.initialStockLoading.bind(this)\n    // initialStockLoading()\n    this.initialstocks = this.initialstocks.bind(this)\n    this.initialstocks()\n  }\n\n\n  // updatingStockList(){ //getting user's favorit stock list\n\n  //   console.log('gettingStockList fired');\n\n  //   axios.get('http://localhost:3333/stock/update',{listcontents:}, {withCredentials: true}).then((result)=>{ //need option?\n  //     console.log('This is favorite Stock List info: ', result.data);\n  //   })\n\n  // }\n\n  initialstocks() { //working on here\n    // e.preventDefault();\n    setTimeout(()=>{\n      console.log('initial list fired');\n      console.log('this is this.state.symbol', this.state);\n\n      let previousList = []\n      this.state.stocks.forEach((el)=>{\n        previousList.push(el.symbol)\n      })\n\n      let initialstock = this.state.newloading\n      // 여기다 넣는 거구나\n       initialstock.forEach(async(e)=>{\n        console.log('this is e', e)\n         if(previousList.indexOf(e) === -1){\n          let stock = await this.fetchStockDetailsFromAPI(e);\n          console.log('this is changed stock', stock);\n          this.setState({\n            stocks: [...this.state.stocks, stock] // Add stock searched on the end of list\n          });\n         }\n\n      })\n    }, 2500)\n\n  }\n\n\n\n  noLoginList(){\n    setTimeout(() => {\n      if(this.state.currentUser.name ===\"\"){\n        console.log('nologin function fired');\n        console.log('currentuser.name', this.state.currentUser.name)\n        console.log('currentuser', this.state.currentUser)\n        axios.get('http://localhost:3333/', {withCredentials: true}).then((result)=>{ //need option?\n        let companylist = result.data.nostocklist.split(',')\n          let newlist =[]\n          companylist.forEach((e)=>{\n          newlist.push(e)})\n          console.log('this is new list', newlist); //여기까지는 문제 없음\n          this.setState({newloading: newlist})\n          console.log('this is state.newloading', this.state.newloading);\n        })\n    }else{\n        console.log('currentuser', this.state.currentUser)\n        console.log('currentuser.name', this.state.currentUser.name)\n        console.log('login function fired');\n        axios.get('http://localhost:3333/stock/mylist', {withCredentials: true}).then((result)=>{ //need option?\n        console.log('this is userStocklist info: ', result.data);\n          let companylist = result.data.listcontents.split(',')\n          let newlist =[]\n          companylist.forEach((e)=>{\n          newlist.push(e)})\n          console.log('this is new list', newlist); //여기까지는 문제 없음\n          this.setState({newloading: newlist})\n          console.log('this is state.newloading', this.state.newloading);\n        })\n    }\n\n    }, 500);\n\n}\n\n\n\n  deleteStockList(){\n  console.log('deleteStockList fired');\n  axios.post('http://localhost:3333/stock/deletelist',{listname:\"listname\"}, {withCredentials: true}).then((result)=>{ //need option?\n    console.log('This is deleteUserStock result: ', result);\n    console.log('delete completed')\n  })\n}\n\n\n\ngettingStockList(){ //getting user's favorit stock list\n\n    console.log('gettingStockList fired');\n\n    axios.get('http://localhost:3333/stock/mylist', {withCredentials: true}).then((result)=>{ //need option?\n      console.log('This is favorite Stock List info: ', result.data);\n    })\n\n  }\n\n\n\n //about getting data from server\n//  deleteUserStock(){\n\n//   console.log('deleteUserStock fired');\n//   axios.post('http://localhost:3333/stock/deletestock', {aa:\"tst1\"}, {withCredentials: true}).then((result)=>{ //need option?\n//     console.log('This is deleteUserStock result: ', result);\n//   })\n// }\n\n\n\n\n  addingStockList() {\n    console.log(\"addingStockList fired\");\n    axios\n      .post(\n        \"http://localhost:3333/stock/addlist\",\n        {\n          listname: \"test12\",\n          listcontents: \"test12\" // aapl,samsung,googl\n        },\n        { withCredentials: true }\n      )\n      .then(result => {\n        //need option?\n        console.log(\"This is addingStockList result: \");\n      });\n  }\n\n  addingStocktoUser() {\n    //adding data to server. Paramater to be changed as per situation.\n    console.log(\"addingStocktoUser fired\");\n    axios\n      .post(\n        \"http://localhost:3333/stock/addstock\",\n        { stocksymbol: \"test\" },\n        { withCredentials: true }\n      )\n      .then(result => {\n        //need option?\n        console.log(\"This is added stock info: \", result.data);\n      });\n  }\n\n  gettingUserInfo(){ //getting user info\n    console.log('userinfo fired');\n    axios.get('http://localhost:3333/user/info', {withCredentials: true}).then((result)=>{ //need option?\n      console.log('This is the user info: ', result.data);\n      this.setState({currentUser: result.data })\n    })\n\n  }\n\n  //////////////////////////////REST API END ////////////////////////////////////////////////////////////////////////\n\n  clickMenuDropDown() {\n    this.setState({\n      menuVisible: !this.state.menuVisible\n    });\n  }\n\n  logout() {\n    console.log(\"logging out\");\n    ///working on\n    this.setState({ currentUser: null });\n\n    axios.get('http://localhost:3333/auth/logout', {withCredentials: true}).then((result)=>{ //need option?\n    console.log('This is deleteUserStock result: ', result);\n    console.log('delete completed')\n    console.log('logout fired');\n  })\n\n  // window.location.reload(true);\n  // console.log('refresh fired');\n}\n\n\n\n\n  login() {\n    let path = `/login`;\n    this.props.history.push(path);\n  }\n\n  getValueFromInput(e) {\n    this.setState({ symbol: e.target.value });\n  }\n\n  async fetchStockDetailsFromAPI(symbol) {\n    const price = await axios.get(serverPriceUrl(symbol));\n    const quote = await axios.get(serverQuoteUrl(symbol));\n    const stats = await axios.get(serverStatsUrl(symbol));\n\n    return {\n      price: price.data,\n\n      symbol: quote.data.symbol,\n      companyName: quote.data.companyName,\n      changePercent: quote.data.changePercent,\n\n      marketcap: stats.data.marketcap,\n      revenuePerShare: stats.data.revenuePerShare,\n      revenue: stats.data.revenue,\n      week52high: stats.data.week52high,\n      week52low: stats.data.week52low,\n      ebitda: stats.data.EBITDA,\n      dividendYield: stats.data.dividendYield,\n      profitMargin: stats.data.profitMargin,\n      returnOnEquity: stats.data.returnOnEquity,\n      ttmEPS: stats.data.ttmEPS\n    };\n  }\n\n////main code ////main code ////main code\n//this was for first loading\n\n\n//this was for first loading\n\n\n\n\n\n///////////main code ////main code ////main code\n  async addStockToList(e) {\n    e.preventDefault();\n    console.log(\"addstock list fired\");\n\n    // async componentDidMount() {\n    //   const result = await axios.get(\n    //     serverTop10Companies(\"googl,aapl,msft,fb,dis,amzn,baba,jnj,brk.a,jpm\")\n    //   );\n\n    //   this.setState({\n    //     stocks: result.data\n    //   });\n\n    const stock = await this.fetchStockDetailsFromAPI(this.state.symbol);\n    // console.log('this is stock list', stock)\n    // console.log('this is previous stock list?', this.state.stocks) //this.state.stocks\n    let previousList = [];\n    this.state.stocks.forEach(el => {\n      previousList.push(el.symbol);\n    });\n    // console.log('this is  previous list', previousList);\n    // console.log('symbole to be added', stock)\n    // console.log('index of', previousList.indexOf(stock.symbol))\n    if (previousList.indexOf(stock.symbol) === -1) {\n      console.log(\"stock can be added as it is not included :\", stock);\n      this.setState({\n        stocks: [...this.state.stocks, stock] // Add stock searched on the end of list\n      });\n    } else {\n      console.log(\"the stock cannot be added ad it is already in the list\");\n    }\n  }\n\n  backToList() {\n    this.setState({\n      page: \"LIST\",\n      selectedStock: null\n    });\n  }\n\n  async selectStock(symbol) {\n    const selectedStock = await this.fetchStockDetailsFromAPI(symbol);\n\n    this.setState({\n      page: \"DETAILS\",\n      selectedStock,\n      symbol\n    });\n  }\n\n\n\n  deleteStock = (index) => {\n    const stocks = Object.assign([], this.state.stocks);\n    stocks.splice(index, 1);\n    this.setState({ stocks: stocks });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MenuDropdown\n          user={this.state.currentUser}\n          onLogin={this.login}\n          onLogout={this.logout}\n        />\n\n        {this.state.page === \"LIST\" ? (\n          <>\n            <SearchStock\n              getValueFromInput={this.getValueFromInput}\n              addStockToList={this.addStockToList}\n            />\n            <WatchList\n              stocks={this.state.stocks}\n              page={this.state.page}\n              selectStock={this.selectStock}\n              delStock={this.deleteStock.bind(this.index)}\n            />\n          </>\n        ) : (\n          <StockDetailsPage\n            selectedStock={this.state.selectedStock}\n            backToList={this.backToList}\n            symbol={this.state.symbol}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport MenuDropdown from \"./Menu\";\nimport \"./User.scss\";\n\nconst User = props => {\n  return (\n    <div className=\"App\">\n      <MenuDropdown\n        user={props.currentUser}\n        onLogout={props.logout}\n        onLogin={props.login}\n      />\n    </div>\n  );\n};\n\nexport default User;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n// import {ApolloProvider, ApolloConsumer, createNetworkInterface} from 'react-apollo'\nimport Router from \"react-router-dom\";\nimport \"./Login.scss\";\n\nconst SERVER_URL = \"http://localhost:3333/auth/login\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    this.getEmail = this.getEmail.bind(this);\n    this.getPassword = this.getPassword.bind(this);\n    this.login = this.login.bind(this);\n    // this.gettingUserInfo = this.gettingUserInfo.bind(this)\n    this.routeChange = this.routeChange.bind(this);\n  }\n\n  // gettingUserInfo(){\n  //   console.log('userinfo fired');\n  //   axios.get('http://localhost:3333/user/info', {withCredentials: true}).then((result)=>{ //need option?\n  //     console.log('!!!!!!!!!axios result for userinfo fired: ', result);\n  //   })\n\n  // }\n\n  routeChange() {\n    let path = `/signup`;\n    this.props.history.push(path);\n  }\n\n  getEmail(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  getPassword(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  login(event) {\n    event.preventDefault();\n    console.log(\"Email \" + this.state.email, \"Password \" + this.state.password);\n\n    axios\n      .post(\n        SERVER_URL,\n        { userId: this.state.email, password: this.state.password },\n        { withCredentials: true }\n      )\n      .then(result => {\n        console.log(\"here is what is going on result 1111\", result); // this is the right one\n        console.log(\"here is what is going on result.data 1111\", result.data); // this is the right one\n        console.log(\n          \"here is what is going on result.data.data 1111\",\n          result.data.data\n        );\n        // console.log('here is what is going on data.request.response', result[\"request\"])\n        //result should be session\n\n        // this.props.history.push(\"/\");\n      })\n      .then(result => {\n        console.log(\"here is  what is going on 22:\", result);\n      })\n      .then(aa => {\n        console.log(\"getting info fired\");\n        // this.gettingUserInfo()\n      })\n      .then(aa => {\n        console.log(\"getting info fired\");\n        // this.gettingUserInfo()\n      });\n    this.props.history.push(\"/\");\n  }\n\n  ////// async\n  ////// async\n  ////// async////// async////// async////// async////// async////// async\n\n  ////// async\n  ////// async\n  ////// async////// async////// async////// async////// async////// async\n\n  //  async (req, res, next) => {\n\n  //   try{\n\n  //   if (!req.session.jwt) { // 세션에 토큰이 없으면\n  //     const tokenResult = await axios.post(`http://localhost:3333/v1/token`, {\n  //       clientSecret: process.env.CLIENT_SECRET,\n  //     }); // 여기서 토큰 정보 리시브 완료\n\n  //     if(tokenResult.data && tokenResult.data.code ===200){\n  //       req.session.jwt = tokenResult.data.token; //req.session에다가 토큰 저장\n  //                                                 //req.session과 res.session의 차이는?\n  //     }else{\n  //       return res.json(tokenResult.data)//api 서버가 아닌, 클라이언트에게! 보낼 때 res에다가 토큰의 결과를 보낸다.\n  //     }\n  //   }\n\n  //   const result = await axios.get('http://localhost:3333/v1/test', {\n  //     headers: {authorization: req.session.jwt} // 그다음 받은 토큰을 header에 집어 넣는다.  req.session과 res.session이 같을 필요는 없다. 여기서 바로 넣어 버릴거니까.\n  //     //백엔드에서 그냥 바로 정보를 집어 넣어 버려라.\n  //     // session 인증 백엔드에서 좀 바꾸도록 하자.\n  //   });\n  //   return res.json(result.data);\n\n  //   }catch(error){ console.log(error)\n\n  //   if(error.code===419){\n  //   return res.json(error.response.data);\n  //   }\n  //   return next(error);\n  //   }\n\n  // })\n\n  ///////////// async////// async////// async////// async////// async////// async////// async\n\n  //   try{\n\n  //   if (!req.session.jwt) { // 세션에 토큰이 없으면\n  //     const tokenResult = await axios.post(`http://localhost:3333/v1/token`, {\n  //       clientSecret: process.env.CLIENT_SECRET,\n  //     }); // 여기서 토큰 정보 리시브 완료\n\n  //     if(tokenResult.data && tokenResult.data.code ===200){\n  //       req.session.jwt = tokenResult.data.token; //req.session에다가 토큰 저장\n  //                                                 //req.session과 res.session의 차이는?\n  //     }else{\n  //       return res.json(tokenResult.data)//api 서버가 아닌, 클라이언트에게! 보낼 때 res에다가 토큰의 결과를 보낸다.\n  //     }\n  //   }\n\n  //   const result = await axios.get('http://localhost:3333/v1/test', {\n  //     headers: {authorization: req.session.jwt} // 그다음 받은 토큰을 header에 집어 넣는다.  req.session과 res.session이 같을 필요는 없다. 여기서 바로 넣어 버릴거니까.\n  //     //백엔드에서 그냥 바로 정보를 집어 넣어 버려라.\n  //     // session 인증 백엔드에서 좀 바꾸도록 하자.\n  //   });\n  //   return res.json(result.data);\n\n  //   }catch(error){ console.log(error)\n\n  //   if(error.code===419){\n  //   return res.json(error.response.data);\n  //   }\n  //   return next(error);\n  //   }\n\n  // })\n\n  render() {\n    return (\n      <>\n        <div className=\"login-container\">\n          <h2>Login</h2>\n          <form className=\"login-form\" onSubmit={this.login}>\n            <input\n              className=\"email-login-input\"\n              type=\"text\"\n              value={this.state.email}\n              onChange={this.getEmail}\n              placeholder=\"E-mail\"\n            />\n            <input\n              className=\"password-login-input\"\n              type=\"password\"\n              value={this.state.password}\n              onChange={this.getPassword}\n              placeholder=\"Password\"\n            />\n            <button className=\"login-page-button\" type=\"submit\" value=\"Login\">\n              Login\n            </button>\n          </form>\n          <span className=\"dont-have\">\n            Dont have an account yet?\n            <button\n              className=\"login-page-signup-button\"\n              onClick={this.routeChange}\n            >\n              Sign up here\n            </button>\n          </span>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./signup.scss\";\nconst SERVER_URL = \"http://localhost:3333/auth/join\";\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    };\n\n    this.getName = this.getName.bind(this);\n    this.getEmail = this.getEmail.bind(this);\n    this.getPassword = this.getPassword.bind(this);\n    this.signup = this.signup.bind(this);\n  }\n\n  getName(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  getEmail(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  getPassword(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  signup(event) {\n    event.preventDefault();\n    axios\n      .post(SERVER_URL, {\n        name: this.state.name,\n        userId: this.state.email,\n        password: this.state.password\n      })\n      .then(result => {\n        console.log(result);\n\n        this.props.history.push(\"/login\"); ////\n      });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"signup-container\">\n          <h2>Sign Up</h2>\n          <form onSubmit={this.signup}>\n            <input\n              className=\"signup-input\"\n              type=\"text\"\n              value={this.state.name}\n              onChange={this.getName}\n              placeholder=\"Name\"\n            />\n\n            <input\n              className=\"signup-input\"\n              type=\"text\"\n              value={this.state.email}\n              onChange={this.getEmail}\n              placeholder=\"E-mail\"\n            />\n\n            <input\n              className=\"signup-input\"\n              type=\"password\"\n              value={this.state.password}\n              onChange={this.getPassword}\n              placeholder=\"Password\"\n            />\n\n            <button className=\"signup-page-button\" type=\"submit\" value=\"\">\n              {\" \"}\n              Sign Up\n            </button>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Signup;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport App from \"./components/App\";\nimport Menu from \"./components/header/Menu\";\nimport User from \"./components/header/User\";\nimport StockChart from \"./components/infoPage/StockChart\";\nimport StockDetails from \"./components/infoPage/StockDetails\";\nimport Login from \"./components/loginPage/Login\";\nimport SearchStock from \"./components/mainPage/SearchStock\";\nimport WatchList from \"./components/mainPage/WatchList\";\nimport Signup from \"./components/signupPage/signup\";\n\nconst Routes = (\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={App} />\n      <Route exact path=\"/menu\" component={Menu} />\n      <Route exact path=\"/user\" component={User} />\n      <Route exact path=\"/stockchart\" component={StockChart} />\n      <Route exact path=\"/stockdetails\" component={StockDetails} />\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/searchstock\" component={SearchStock} />\n      <Route exact path=\"/watchlist\" component={WatchList} />\n      <Route exact path=\"/signup\" component={Signup} />\n    </div>\n  </Router>\n);\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ReactDOM from 'react-dom';\nimport './index.css';\n\n\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(Routes, document.getElementById('root'));\n\nserviceWorker.unregister();\n\n// if (module.hot) {\n//   module.hot.accept();\n// }\n","module.exports = __webpack_public_path__ + \"static/media/home.4bb5e575.svg\";","module.exports = __webpack_public_path__ + \"static/media/stocklogo.b73a3ac8.svg\";","module.exports = __webpack_public_path__ + \"static/media/grav.2f1629cc.png\";","module.exports = __webpack_public_path__ + \"static/media/info.9feaa17e.svg\";","module.exports = __webpack_public_path__ + \"static/media/del.22589a55.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.45286e8e.svg\";"],"sourceRoot":""}