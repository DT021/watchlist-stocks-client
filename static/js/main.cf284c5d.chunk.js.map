{"version":3,"sources":["components/header/Menu.js","components/mainPage/WatchList.js","components/mainPage/SearchStock.js","components/infoPage/StockDetails.js","components/infoPage/StockChart.js","components/App.js","components/header/User.js","components/loginPage/Login.js","components/signupPage/signup.js","Routes.js","serviceWorker.js","index.js","components/home.svg","components/header/stocklogo.svg","components/header/grav.png","components/mainPage/search.svg"],"names":["MenuDropdown","props","_useState","useState","_useState2","Object","slicedToArray","menuVisible","setMenuVisible","react_default","a","createElement","className","href","src","logo","alt","user","Fragment","gravexample","id","type","for","onClick","name","onLogout","onLogin","WatchList","stocks","map","stock","key","symbol","delStock","price","selectStock","SearchStock","_ref","getValueFromInput","addStockToList","onSubmit","onChange","placeholder","autoFocus","value","svgSprite","StockDetails","companyName","toFixed","changePercent","week52low","week52high","suffixNum","Math","floor","length","shortValue","parseFloat","pow","toPrecision","intToString","marketcap","revenue","revenuePerShare","ebitda","profitMargin","returnOnEquity","ttmEPS","dividendYield","BarChart","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","stock_period_url","period","concat","setPeriod","asyncToGenerator","regenerator_default","mark","_callee","e","wrap","_context","prev","next","preventDefault","setState","target","console","log","state","buttonColor","textColor","getChartData","stop","_x","apply","arguments","chartData","_this2","axios","get","then","results","data","samples","high","dates","date","minutes","minute","labels","datasets","label","backgroundColor","_this3","periods","style","color","border","es","Component","serverQuoteUrl","stockSymbol","serverStatsUrl","StockDetailsPage","selectedStock","backToList","homeButton","components_infoPage_StockDetails","infoPage_StockChart","App","deleteStock","index","assign","splice","page","currentUser","menu_icon","gravata","email","logout","bind","assertThisInitialized","login","gettingUserInfo","gettingUserStock","gettingStockList","addingStocktoUser","addingStockList","post","listname","listcontents","withCredentials","result","stocksymbol","history","push","quote","stats","EBITDA","fetchStockDetailsFromAPI","toConsumableArray","header_Menu","mainPage_SearchStock","components_mainPage_WatchList","App_StockDetailsPage","React","User","Login","password","getEmail","getPassword","routeChange","event","userId","aa","Signup","getName","signup","Routes","react_router_dom","react_router","exact","path","component","Menu","StockChart","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.cf284c5d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport logo from \"./stocklogo.svg\";\nimport gravexample from \"./grav.png\";\nimport \"./Menu.scss\";\n\nconst MenuDropdown = props => {\n  const [menuVisible, setMenuVisible] = useState(false);\n  return (\n    <div className=\"menu\">\n      <header>\n        <div className=\"second-box\" />\n        <a href=\"http://localhost:3000/#/\">\n          <img className=\"logo\" src={logo} alt=\" \" />\n        </a>\n\n        <p className=\"signed-in-user-gravatar\"> </p>\n        {props.user ? (\n          <>\n            <img className=\"gravatar\" src={gravexample} alt=\" \" />\n            <input id=\"burger\" type=\"checkbox\" />\n            <label\n              id=\"label-menu\"\n              for=\"burger\"\n              onClick={() => setMenuVisible(!menuVisible)}\n            >\n              <span className=\"nav-line\" />\n              <span className=\"nav-line\" />\n              <span className=\"nav-line\" />\n            </label>\n\n            {menuVisible ? (\n              <>\n                <nav className=\"drop-down\">\n                  {/* <div className=\"nav-item\">Account</div> */}\n                  <div className=\"nav-item\">{props.user.name}</div>\n                  <button\n                    className=\"nav-item nav-button\"\n                    onClick={props.onLogout}\n                  >\n                    Logout\n                  </button>\n                </nav>\n              </>\n            ) : null}\n          </>\n        ) : (\n          <button className=\"login-button\" onClick={props.onLogin}>\n            Login\n          </button> // once the user goes to log in, there it can go to signup\n        )}\n      </header>\n    </div>\n  );\n};\n\nexport default MenuDropdown;\n\n// <p className=\"user-gravatar\">{props.user.gravata}</p>\n","import React from \"react\";\nimport \"./WatchList.scss\";\n\nconst WatchList = props => (\n  <div>\n    {props.stocks.map(stock => {\n      return (\n\n        <div\n          key={stock.symbol}\n          className=\"item\"\n\n        >\n          <button onClick={props.delStock}>Delete</button>\n          <div className=\"symbol_name\">\n            <div className=\"symbol\">{stock.symbol}</div>\n          </div>\n\n          <div className=\"price_percent\">\n            <div className=\"price\">$ {stock.price}</div>\n          </div>\n          <button onClick={() => props.selectStock(stock.symbol)}>ⓘ</button>\n        </div>\n      );\n    })}\n  </div>\n);\n\nexport default WatchList;\n","import React from \"react\";\nimport \"./SearchStocks.scss\";\nimport svgSprite from \"./search.svg\";\n\nconst SearchStock = ({ getValueFromInput, addStockToList }) => {\n  return (\n    <div>\n      <form className=\"search-stock\" onSubmit={addStockToList}>\n        <div className=\"search-input\">\n          <div className=\"cursor\">\n            <input\n              className=\"input_field\"\n              type=\"search\"\n              onChange={getValueFromInput}\n              placeholder=\"symbol\"\n              autoFocus\n            />\n            <i />\n          </div>\n        </div>\n        <div>\n          <button className=\"submit_input\" type=\"submit\" value=\"\">\n            <img className=\"search-button\" src={svgSprite} alt=\" \" />\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchStock;\n","import React from \"react\";\nimport \"./StockDetails.scss\";\n\nfunction intToString(value) {\n  var suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n  var suffixNum = Math.floor((\"\" + value).length / 3);\n  var shortValue = parseFloat(\n    (suffixNum != 0 ? value / Math.pow(1000, suffixNum) : value).toPrecision(2)\n  );\n  if (shortValue % 1 != 0) {\n    // var shortNum = shortValue.toFixed(1);\n  }\n  return shortValue + suffixes[suffixNum];\n}\n\nconst StockDetails = ({ stock }) => {\n  return (\n    <>\n      <div className=\"stock-details-container item\">\n        <div className=\"symbol-name\">\n          <div className=\"company-symbol\"> {stock.symbol}</div>\n          <div className=\"company-name\">{stock.companyName}</div>\n        </div>\n        <div className=\"price-osc\">\n          <div className=\"price-list\">$ {stock.price.toFixed(2)}</div>\n          <div>{stock.changePercent.toFixed(2)}</div>\n        </div>\n      </div>\n\n      <div className=\"stock-details\">\n        <p>week52Low:($) {stock.week52low.toFixed(2)}</p>\n        <p>week52High:($) {stock.week52high.toFixed(2)}</p>\n        <p>Market cap:($) {intToString(stock.marketcap)}</p>\n        <p>Revenue:($) {stock.revenue.toFixed(2)}</p>\n        <p>Revenue per share:($) {stock.revenuePerShare.toFixed(2)}</p>\n        <p>EBITDA: {stock.ebitda.toFixed(2)}</p>\n        <p>Profit Margin: $ {stock.profitMargin.toFixed(2)}</p>\n        <p>ROE: {stock.returnOnEquity.toFixed(2)}</p>\n        <p>EPS: {stock.ttmEPS.toFixed(2)}</p>\n        <p>Div.Yield: {stock.dividendYield.toFixed(2)}</p>\n      </div>\n    </>\n  );\n};\nexport default StockDetails;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport \"./StockChart.scss\";\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      period: \"1y\",\n      chartData: {},\n      buttonColor: \"#45a29e\",\n      textColor: \"#1f2833\"\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  stock_period_url = (symbol, period) => {\n    return `https://api.iextrading.com/1.0/stock/${symbol}/chart/${period}`;\n  };\n\n  setPeriod = async e => {\n    e.preventDefault();\n    await this.setState({\n      period: e.target.value\n    });\n    console.log(this.state.period);\n    this.setState({ buttonColor: \"#66fcf1\" });\n    this.setState({ textColor: \"#1f2833\" });\n    this.getChartData();\n  };\n\n  getChartData() {\n    axios\n      .get(this.stock_period_url(this.props.symbol, this.state.period))\n      .then(results => {\n        const { data } = results;\n        const samples = data.map(value => value.high);\n        const dates = data.map(value => value.date);\n        const minutes = data.map(value => value.minute);\n        this.setState({\n          chartData: {\n            labels: this.state.period === \"1d\" ? minutes: dates,\n            datasets: [\n              {\n                label: \"Price\",\n                data: samples,\n                backgroundColor: [\"rgba(75, 192, 192, 0.6)\"]\n              }\n            ]\n          }\n        });\n        // console.log({ results });\n      });\n  }\n\n  render() {\n    const periods = [\"1d\", \"1m\", \"3m\", \"6m\", \"1y\", \"2y\", \"5y\"];\n    console.log(periods[0]);\n    if (periods[0])\n      return (\n        <>\n          <div className=\"chart-container\">\n            <div className=\"current-period\" />\n            {periods.map(period => (\n              <button\n                className=\"period-buttons\"\n                onClick={this.setPeriod}\n                style={\n                  period === this.state.period\n                    ? {\n                        color: \"#1f2833\",\n                        backgroundColor: \"#66fcf1\",\n                        border: \"2px solid #1f2833\"\n                      }\n                    : { color: \"#66fcf1\", backgroundColor: \"#1f2833\" }\n                }\n                value={period}\n              >\n                {period}\n              </button>\n            ))}\n\n            <Line data={this.state.chartData} />\n          </div>\n        </>\n      );\n  }\n}\n\nexport default BarChart;\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"../App.scss\";\nimport homeButton from \"./home.svg\";\n\nimport MenuDropdown from \"./header/Menu\";\nimport WatchList from \"./mainPage/WatchList\";\nimport SearchStock from \"./mainPage/SearchStock\";\nimport StockDetails from \"./infoPage/StockDetails\";\nimport StockChart from \"./infoPage/StockChart\";\n\nconst serverTop10Companies = companies =>\n  `https://api.iextrading.com/1.0/tops/last?symbols=${companies}`;\nconst serverPriceUrl = stockSymbol =>\n  `https://api.iextrading.com/1.0/stock/${stockSymbol}/price`;\nconst serverQuoteUrl = stockSymbol =>\n  `https://api.iextrading.com/1.0/stock/${stockSymbol}/quote?displayPercent=true`;\nconst serverStatsUrl = stockSymbol =>\n  `https://api.iextrading.com/1.0/stock/${stockSymbol}/stats`;\n\nconst StockDetailsPage = ({ selectedStock, backToList, symbol }) => (\n  <>\n    <div>\n      <button className=\"mobile-button\" onClick={backToList}>\n        <img className=\"mobile-button-icon\" src={homeButton} alt=\" \" />\n      </button>\n      <button className=\"back-to-list\" onClick={backToList}>\n        Back to list\n      </button>\n    </div>\n    <StockDetails stock={selectedStock} />\n    <StockChart symbol={symbol} />\n  </>\n);\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    const currentUser = {\n      menu_icon: \"menu_icon\",\n      gravata: \"gravata\",\n      name: \"Luke\",\n      email: \"luke@email.com\"\n    };\n\n    this.state = {\n      selectedStock: {\n        changePercent: 0\n      },\n      stocks: [],\n      page: \"LIST\", // LIST || DETAILS\n\n      symbol: \"\",\n      results: [],\n\n      menuVisible: false,\n      currentUser: currentUser\n    };\n\n    this.logout = this.logout.bind(this);\n    this.login = this.login.bind(this);\n\n    this.selectStock = this.selectStock.bind(this);\n    this.backToList = this.backToList.bind(this);\n\n    this.getValueFromInput = this.getValueFromInput.bind(this);\n    this.addStockToList = this.addStockToList.bind(this);\n\n\n    ///////////////////////////REST api for reading////////////////////////\n    this.gettingUserInfo = this.gettingUserInfo.bind(this); // getting user information from data base\n    // this.gettingUserInfo() test completed\n\n    this.gettingUserStock = this.gettingUserStock.bind(this)\n    // this.gettingUserStock() test completed\n\n    this.gettingStockList = this.gettingStockList.bind(this)\n    // this.gettingStockList() test completed\n\n\n    //////////////REST API for writing. Please change the paramaters before apply\n    this.addingStocktoUser = this.addingStocktoUser.bind(this) //test completed\n    // this.addingStocktoUser() test completed\n\n    this.addingStockList = this.addingStockList.bind(this)\n    // this.addingStockList() test completed\n\n  }\n\n //about getting data from server\n\nup\n\n addingStockList(){\n  console.log('addingStockList fired');\n  axios.post('http://localhost:3333/stock/addlist', {\n    listname: 'test',\n    listcontents: 'test'\n}, {withCredentials: true}).then((result)=>{ //need option?\n    console.log('This is addingStockList result: ');\n  })\n}\n\n addingStocktoUser(){ //adding data to server. Paramater to be changed as per situation.\n  console.log('addingStocktoUser fired');\n    axios.post('http://localhost:3333/stock/addstock', {stocksymbol: \"test\"}, {withCredentials: true}).then((result)=>{ //need option?\n      console.log('This is added stock info: ', result.data);\n    })\n  }\n\n\n\n\n gettingStockList(){ //getting user's favorit stock list\n\n    console.log('gettingStockList fired');\n\n    axios.get('http://localhost:3333/stock/mylist', {withCredentials: true}).then((result)=>{ //need option?\n      console.log('This is favorite Stock List info: ', result.data);\n    })\n\n  }\n\n\n  gettingUserStock(){ //getting stocks that user added.\n    console.log('gettingUserStock fired');\n\n    axios.get('http://localhost:3333/stock/mystock', {withCredentials: true}).then((result)=>{ //need option?\n      console.log('this is userStock info: ', result.data);\n    })\n\n  }\n\n  gettingUserInfo(){ //getting user info\n    console.log('userinfo fired');\n    axios.get('http://localhost:3333/user/info', {withCredentials: true}).then((result)=>{ //need option?\n      console.log('This is the user info: ', result.data);\n    })\n\n  }\n //////////////////////////////REST API END ////////////////////////////////////////////////////////////////////////\n\n\n  clickMenuDropDown() {\n    this.setState({\n      menuVisible: !this.state.menuVisible\n    });\n  }\n\n  logout() {\n    console.log(\"logging out\");\n    this.setState({ currentUser: null });\n  }\n\n  login() {\n    let path = `/login`;\n    this.props.history.push(path);\n  }\n\n  getValueFromInput(e) {\n    this.setState({ symbol: e.target.value });\n  }\n\n  async fetchStockDetailsFromAPI(symbol) {\n    const price = await axios.get(serverPriceUrl(symbol));\n    const quote = await axios.get(serverQuoteUrl(symbol));\n    const stats = await axios.get(serverStatsUrl(symbol));\n\n    return {\n      price: price.data,\n\n      symbol: quote.data.symbol,\n      companyName: quote.data.companyName,\n      changePercent: quote.data.changePercent,\n\n      marketcap: stats.data.marketcap,\n      revenuePerShare: stats.data.revenuePerShare,\n      revenue: stats.data.revenue,\n      week52high: stats.data.week52high,\n      week52low: stats.data.week52low,\n      ebitda: stats.data.EBITDA,\n      dividendYield: stats.data.dividendYield,\n      profitMargin: stats.data.profitMargin,\n      returnOnEquity: stats.data.returnOnEquity,\n      ttmEPS: stats.data.ttmEPS\n    };\n  }\n\n  async addStockToList(e) {\n    e.preventDefault();\n\n    const stock = await this.fetchStockDetailsFromAPI(this.state.symbol);\n\n    this.setState({\n      stocks: [...this.state.stocks, stock] // Add stock searched on the end of list\n    });\n  }\n\n  backToList() {\n    this.setState({\n      page: \"LIST\",\n      selectedStock: null\n    });\n  }\n\n  async selectStock(symbol) {\n    const selectedStock = await this.fetchStockDetailsFromAPI(symbol);\n\n    this.setState({\n      page: \"DETAILS\",\n      selectedStock,\n      symbol\n    });\n  }\n\n  async componentDidMount() {\n    const result = await axios.get(\n      serverTop10Companies(\"googl,aapl,msft,fb,dis,amzn,baba,jnj,brk.a,jpm\")\n    );\n\n    this.setState({\n      stocks: result.data\n    });\n  }\n\n  deleteStock = (index, e) => {\n    const stocks = Object.assign([], this.state.stocks);\n    stocks.splice(index, 1);\n    this.setState({stocks: stocks});\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <MenuDropdown\n          user={this.state.currentUser}\n          onLogin={this.login}\n          onLogout={this.logout}\n        />\n\n        {this.state.page === \"LIST\" ? (\n          <>\n            <SearchStock\n              getValueFromInput={this.getValueFromInput}\n              addStockToList={this.addStockToList}\n            />\n            <WatchList\n              stocks={this.state.stocks}\n              page={this.state.page}\n              selectStock={this.selectStock}\n              delStock={this.deleteStock.bind(this.index)}\n\n            />\n          </>\n        ) : (\n          <StockDetailsPage\n            selectedStock={this.state.selectedStock}\n            backToList={this.backToList}\n            symbol={this.state.symbol}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport MenuDropdown from \"./Menu\";\nimport \"./User.scss\";\n\nconst User = props => {\n  return (\n    <div className=\"App\">\n      <MenuDropdown\n        user={props.currentUser}\n        onLogout={props.logout}\n        onLogin={props.login}\n      />\n    </div>\n  );\n};\n\nexport default User;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n// import {ApolloProvider, ApolloConsumer, createNetworkInterface} from 'react-apollo'\nimport Router from 'react-router-dom';\nimport \"./Login.scss\";\n\nconst SERVER_URL ='http://localhost:3333/auth/login'\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    this.getEmail = this.getEmail.bind(this);\n    this.getPassword = this.getPassword.bind(this);\n    this.login = this.login.bind(this);\n    // this.gettingUserInfo = this.gettingUserInfo.bind(this)\n    this.routeChange = this.routeChange.bind(this);\n\n  }\n\n  // gettingUserInfo(){\n  //   console.log('userinfo fired');\n  //   axios.get('http://localhost:3333/user/info', {withCredentials: true}).then((result)=>{ //need option?\n  //     console.log('!!!!!!!!!axios result for userinfo fired: ', result);\n  //   })\n\n  // }\n\n  routeChange() {\n    let path = `/signup`;\n    this.props.history.push(path);\n  }\n\n\n  getEmail(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  getPassword(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  login(event) {\n    event.preventDefault();\n    console.log(\n      'Email ' + this.state.email,\n      'Password ' + this.state.password)\n\n  axios.post(SERVER_URL, {userId: this.state.email, password: this.state.password}, {withCredentials:true}).then((result)=>{\n\n        console.log('here is what is going on result 1111', result) // this is the right one\n        console.log('here is what is going on result.data 1111', result.data) // this is the right one\n        console.log('here is what is going on result.data.data 1111', result.data.data)\n        // console.log('here is what is going on data.request.response', result[\"request\"])\n        //result should be session\n\n        this.props.history.push('/')\n      }).then((result)=>{console.log(\"here is  what is going on 22:\", result)}).then((aa)=>{\n        console.log('getting info fired')\n        // this.gettingUserInfo()\n      })\n      .then(aa => {\n        console.log(\"getting info fired\");\n        // this.gettingUserInfo()\n      });\n  }\n\n    ////// async\n    ////// async\n    ////// async////// async////// async////// async////// async////// async\n\n\n      ////// async\n      ////// async\n      ////// async////// async////// async////// async////// async////// async\n\n\n      //  async (req, res, next) => {\n\n      //   try{\n\n      //   if (!req.session.jwt) { // 세션에 토큰이 없으면\n      //     const tokenResult = await axios.post(`http://localhost:3333/v1/token`, {\n      //       clientSecret: process.env.CLIENT_SECRET,\n      //     }); // 여기서 토큰 정보 리시브 완료\n\n      //     if(tokenResult.data && tokenResult.data.code ===200){\n      //       req.session.jwt = tokenResult.data.token; //req.session에다가 토큰 저장\n      //                                                 //req.session과 res.session의 차이는?\n      //     }else{\n      //       return res.json(tokenResult.data)//api 서버가 아닌, 클라이언트에게! 보낼 때 res에다가 토큰의 결과를 보낸다.\n      //     }\n      //   }\n\n      //   const result = await axios.get('http://localhost:3333/v1/test', {\n      //     headers: {authorization: req.session.jwt} // 그다음 받은 토큰을 header에 집어 넣는다.  req.session과 res.session이 같을 필요는 없다. 여기서 바로 넣어 버릴거니까.\n      //     //백엔드에서 그냥 바로 정보를 집어 넣어 버려라.\n      //     // session 인증 백엔드에서 좀 바꾸도록 하자.\n      //   });\n      //   return res.json(result.data);\n\n      //   }catch(error){ console.log(error)\n\n      //   if(error.code===419){\n      //   return res.json(error.response.data);\n      //   }\n      //   return next(error);\n      //   }\n\n      // })\n\n\n      ///////////// async////// async////// async////// async////// async////// async////// async\n\n\n    //   try{\n\n    //   if (!req.session.jwt) { // 세션에 토큰이 없으면\n    //     const tokenResult = await axios.post(`http://localhost:3333/v1/token`, {\n    //       clientSecret: process.env.CLIENT_SECRET,\n    //     }); // 여기서 토큰 정보 리시브 완료\n\n    //     if(tokenResult.data && tokenResult.data.code ===200){\n    //       req.session.jwt = tokenResult.data.token; //req.session에다가 토큰 저장\n    //                                                 //req.session과 res.session의 차이는?\n    //     }else{\n    //       return res.json(tokenResult.data)//api 서버가 아닌, 클라이언트에게! 보낼 때 res에다가 토큰의 결과를 보낸다.\n    //     }\n    //   }\n\n    //   const result = await axios.get('http://localhost:3333/v1/test', {\n    //     headers: {authorization: req.session.jwt} // 그다음 받은 토큰을 header에 집어 넣는다.  req.session과 res.session이 같을 필요는 없다. 여기서 바로 넣어 버릴거니까.\n    //     //백엔드에서 그냥 바로 정보를 집어 넣어 버려라.\n    //     // session 인증 백엔드에서 좀 바꾸도록 하자.\n    //   });\n    //   return res.json(result.data);\n\n    //   }catch(error){ console.log(error)\n\n    //   if(error.code===419){\n    //   return res.json(error.response.data);\n    //   }\n    //   return next(error);\n    //   }\n\n    // })\n\n  render() {\n    return (\n      <>\n        <h2>LOGIN!</h2>\n        <form onSubmit={this.login}>\n          <label>\n            Email:\n            <input\n              type=\"text\"\n              value={this.state.email}\n              onChange={this.getEmail}\n            />\n          </label>\n\n          <label>\n            Password:\n            <input\n              type=\"password\"\n              value={this.state.password}\n              onChange={this.getPassword}\n            />\n          </label>\n\n          <input type=\"submit\" value=\"Login\" />\n        </form>\n        <h3>New user? <button onClick={this.routeChange}>SIGNUP!</button></h3>\n\n      </>\n    );\n  }\n}\n\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./signup.scss\";\nconst SERVER_URL = \"http://localhost:3333/auth/join\";\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    };\n\n    this.getName = this.getName.bind(this);\n    this.getEmail = this.getEmail.bind(this);\n    this.getPassword = this.getPassword.bind(this);\n    this.signup = this.signup.bind(this);\n  }\n\n  getName(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  getEmail(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  getPassword(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  signup(event) {\n    event.preventDefault();\n    axios\n      .post(SERVER_URL, {\n        name: this.state.name,\n        userId: this.state.email,\n        password: this.state.password\n      })\n      .then(result => {\n        console.log(result);\n\n        this.props.history.push(\"/login\"); ////\n      });\n  }\n\n  render() {\n    return (\n      <>\n        <h2>SIGN UP!</h2>\n        <form onSubmit={this.signup}>\n          <label>\n            Name:\n            <input\n              type=\"text\"\n              value={this.state.name}\n              onChange={this.getName}\n            />\n          </label>\n\n          <label>\n            Email:\n            <input\n              type=\"text\"\n              value={this.state.email}\n              onChange={this.getEmail}\n            />\n          </label>\n\n          <label>\n            Password:\n            <input\n              type=\"password\"\n              value={this.state.password}\n              onChange={this.getPassword}\n            />\n          </label>\n\n          <input type=\"submit\" value=\"Signup!\" />\n        </form>\n      </>\n    );\n  }\n}\n\nexport default Signup;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport App from \"./components/App\";\nimport Menu from \"./components/header/Menu\";\nimport User from \"./components/header/User\";\nimport StockChart from \"./components/infoPage/StockChart\";\nimport StockDetails from \"./components/infoPage/StockDetails\";\nimport Login from \"./components/loginPage/Login\";\nimport SearchStock from \"./components/mainPage/SearchStock\";\nimport WatchList from \"./components/mainPage/WatchList\";\nimport Signup from \"./components/signupPage/signup\";\n\nconst Routes = (\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={App} />\n      <Route exact path=\"/menu\" component={Menu} />\n      <Route exact path=\"/user\" component={User} />\n      <Route exact path=\"/stockchart\" component={StockChart} />\n      <Route exact path=\"/stockdetails\" component={StockDetails} />\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/searchstock\" component={SearchStock} />\n      <Route exact path=\"/watchlist\" component={WatchList} />\n      <Route exact path=\"/signup\" component={Signup} />\n    </div>\n  </Router>\n);\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ReactDOM from 'react-dom';\nimport './index.css';\n\n\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(Routes, document.getElementById('root'));\n\nserviceWorker.unregister();\n\n// if (module.hot) {\n//   module.hot.accept();\n// }\n","module.exports = __webpack_public_path__ + \"static/media/home.4bb5e575.svg\";","module.exports = __webpack_public_path__ + \"static/media/stocklogo.b73a3ac8.svg\";","module.exports = __webpack_public_path__ + \"static/media/grav.2f1629cc.png\";","module.exports = __webpack_public_path__ + \"static/media/search.45286e8e.svg\";"],"sourceRoot":""}